name: Build WPPConnect Mobile

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/21.0.8-9/x64
      ANDROID_HOME: /usr/local/lib/android/sdk
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3️⃣ Decode and create release keystore
      - name: Create release keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > android/release-key.jks

      # 4️⃣ Install npm dependencies
      - name: Install npm dependencies
        working-directory: .
        run: npm install --legacy-peer-deps

      # 5️⃣ Make gradlew executable
      - name: Make gradlew executable
        run: chmod +x ./android/gradlew

      # 6️⃣ Build the release APK
      - name: Build Android APK
        working-directory: ./android
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=$PWD/release-key.jks \
            -Pandroid.injected.signing.store.password="${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" \
            -Pandroid.injected.signing.key.alias="${{ secrets.RELEASE_KEY_ALIAS }}" \
            -Pandroid.injected.signing.key.password="${{ secrets.RELEASE_KEYSTORE_PASSWORD }}"

      # 7️⃣ Upload APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: wppconnect-release-apk
          path: ./android/app/build/outputs/apk/release/app-release.apk
