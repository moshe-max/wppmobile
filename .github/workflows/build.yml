name: Build WPPConnect Mobile

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ANDROID_HOME: /usr/local/lib/android/sdk
  ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
  JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/21.0.8-9/x64

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-cache-

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Decode and write Android keystore
        if: secrets.RELEASE_KEYSTORE_BASE64 != ''
        run: |
          echo "$RELEASE_KEYSTORE_BASE64" | base64 --decode > android/release-key.jks

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Assemble Android release
        run: |
          cd android
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=$PWD/release-key.jks \
            -Pandroid.injected.signing.store.password=$RELEASE_KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$RELEASE_KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$RELEASE_KEY_PASSWORD
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

      - name: Upload APK artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/**/*.apk

      - name: Post-build diagnostic summary (if build failed)
        if: failure()
        run: |
          echo "=== Build output listing ==="
          ls -la android/app/build/outputs || true
          echo "=== Gradle logs (last 200 lines) ==="
          find android/app/build/outputs -type f -name "*.log" -exec tail -n 200 {} + || true
