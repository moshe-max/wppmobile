name: Build WPPConnect Mobile

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    env:
      NODE_OPTIONS: "--max-old-space-size=4096"
      ANDROID_HOME: /usr/local/lib/android/sdk
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3. Setup Java 17 (compatible with Gradle 7.x)
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # 4. Cache node_modules for faster builds
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-modules-

      # 5. Install npm dependencies (legacy peer deps)
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # 6. Fix React Native dependency conflicts
      - name: Fix QRCode & SVG versions
        run: npm install react-native-svg@latest react-native-qrcode-svg@latest --legacy-peer-deps

      # 7. Decode release keystore if provided
      - name: Decode release keystore
        if: ${{ secrets.RELEASE_KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p android
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > android/release-key.jks

      # 8. Make Gradle wrapper executable
      - name: Make Gradle wrapper executable
        run: chmod +x ./android/gradlew

      # 9. Build the release APK
      - name: Build Release APK
        working-directory: android
        run: |
          if [ -f release-key.jks ]; then
            echo "Building with release keystore..."
            ./gradlew clean assembleRelease \
              -Pandroid.injected.signing.store.file=$PWD/release-key.jks \
              -Pandroid.injected.signing.store.password="${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" \
              -Pandroid.injected.signing.key.alias="${{ secrets.RELEASE_KEY_ALIAS }}" \
              -Pandroid.injected.signing.key.password="${{ secrets.RELEASE_KEY_PASSWORD }}"
          else
            echo "No release keystore found. Building unsigned APK..."
            ./gradlew clean assembleRelease
          fi

      # 10. Cache Gradle for faster rebuilds
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      # 11. Upload APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk
