name: Build WPPConnect Mobile

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    env:
      NODE_OPTIONS: "--max-old-space-size=4096"

    steps:
    # 1. Checkout repo
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    # 3. Setup Java 17 (compatible with Gradle 7.x)
    - name: Setup Java 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    # 4. Install npm dependencies with legacy peer deps to avoid conflicts
    - name: Install dependencies
      run: npm install --legacy-peer-deps

    # 5. Fix React Native QRCode SVG dependency version conflict
    - name: Fix QRCode SVG dependency
      run: npm install react-native-svg@latest react-native-qrcode-svg@latest --legacy-peer-deps

    # 6. Decode release keystore (if provided)
    - name: Decode release keystore
      if: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
      run: |
        mkdir -p android
        echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > android/release-key.jks

    # 7. Make Gradle wrapper executable
    - name: Make Gradle wrapper executable
      run: chmod +x ./android/gradlew

    # 8. Build Release APK
    - name: Build Release APK
      working-directory: android
      run: ./gradlew assembleRelease \
        -Pandroid.injected.signing.store.file=$PWD/release-key.jks \
        -Pandroid.injected.signing.store.password="${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" \
        -Pandroid.injected.signing.key.alias="${{ secrets.RELEASE_KEY_ALIAS }}" \
        -Pandroid.injected.signing.key.password="${{ secrets.RELEASE_KEY_PASSWORD }}"

    # 9. Upload APK artifact
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: android/app/build/outputs/apk/release/app-release.apk
