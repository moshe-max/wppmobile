name: Build WPPConnect Mobile

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build Android Release
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: 20
      JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/21.0.8-9/x64
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4096m"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          build-tools: 33.0.2

      - name: Ensure gradlew is executable
        run: chmod +x ./android/gradlew

      - name: Decode and write Android keystore
        run: |
          if [ -n "$RELEASE_KEYSTORE_BASE64" ]; then
            echo "$RELEASE_KEYSTORE_BASE64" | base64 --decode > android/release-key.jks
          else
            echo "No keystore secret found, skipping..."
          fi
        env:
          RELEASE_KEYSTORE_BASE64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}

      - name: Build Android Release
        working-directory: android
        run: ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=$PWD/release-key.jks \
          -Pandroid.injected.signing.store.password="${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" \
          -Pandroid.injected.signing.key.alias="${{ secrets.RELEASE_KEY_ALIAS }}" \
          -Pandroid.injected.signing.key.password="${{ secrets.RELEASE_KEY_PASSWORD }}"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk
